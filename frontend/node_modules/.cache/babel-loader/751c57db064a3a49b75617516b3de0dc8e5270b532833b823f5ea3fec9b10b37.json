{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/slots';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Get all slots\nexport const getAllSlots = async () => {\n  try {\n    const response = await apiClient.get('/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching slots:', error);\n    throw error;\n  }\n};\n\n// Get a slot by ID\nexport const getSlotById = async slotId => {\n  try {\n    const response = await apiClient.get(`/${slotId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching slot ${slotId}:`, error);\n    throw error;\n  }\n};\n\n// Book a slot\nexport const bookSlot = async bookingData => {\n  try {\n    const response = await apiClient.post('/book', bookingData);\n    return response.data;\n  } catch (error) {\n    console.error('Error booking slot:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","apiClient","create","baseURL","headers","getAllSlots","response","get","data","error","console","getSlotById","slotId","bookSlot","bookingData","post"],"sources":["/workspaces/slotBooking/frontend/src/services/slotService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/slots';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Get all slots\nexport const getAllSlots = async () => {\n  try {\n    const response = await apiClient.get('/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching slots:', error);\n    throw error;\n  }\n};\n\n// Get a slot by ID\nexport const getSlotById = async (slotId) => {\n  try {\n    const response = await apiClient.get(`/${slotId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching slot ${slotId}:`, error);\n    throw error;\n  }\n};\n\n// Book a slot\nexport const bookSlot = async (bookingData) => {\n  try {\n    const response = await apiClient.post('/book', bookingData);\n    return response.data;\n  } catch (error) {\n    console.error('Error booking slot:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;;AAEjD;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,GAAG,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,IAAIK,MAAM,EAAE,CAAC;IAClD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuBG,MAAM,GAAG,EAAEH,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,QAAQ,GAAG,MAAOC,WAAW,IAAK;EAC7C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,SAAS,CAACc,IAAI,CAAC,OAAO,EAAED,WAAW,CAAC;IAC3D,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}