{"ast":null,"code":"var _jsxFileName = \"/workspaces/slotBooking/frontend/src/components/SlotCalendar.js\";\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotCalendar = ({\n  slots,\n  onSlotSelect\n}) => {\n  // Convert slots data to FullCalendar event format\n  const events = slots.map(slot => ({\n    id: slot.slotId,\n    title: slot.status === 'Available' ? 'Available' : 'Booked',\n    start: `${slot.date}T${slot.startTime}`,\n    end: `${slot.date}T${slot.endTime}`,\n    extendedProps: {\n      ...slot\n    },\n    classNames: slot.status === 'Available' ? ['available'] : ['booked'],\n    color: slot.status === 'Available' ? '#28a745' : '#dc3545'\n  }));\n\n  // Handle calendar event click\n  const handleEventClick = clickInfo => {\n    const slot = clickInfo.event.extendedProps;\n    onSlotSelect(slot);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"calendar-container shadow-sm\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridWeek\",\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        events: events,\n        eventClick: handleEventClick,\n        height: \"auto\",\n        allDaySlot: false,\n        slotMinTime: \"08:00:00\",\n        slotMaxTime: \"18:00:00\",\n        nowIndicator: true,\n        businessHours: {\n          daysOfWeek: [1, 2, 3, 4, 5],\n          // Monday - Friday\n          startTime: '09:00',\n          endTime: '17:00'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = SlotCalendar;\nexport default SlotCalendar;\nvar _c;\n$RefreshReg$(_c, \"SlotCalendar\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Card","jsxDEV","_jsxDEV","SlotCalendar","slots","onSlotSelect","events","map","slot","id","slotId","title","status","start","date","startTime","end","endTime","extendedProps","classNames","color","handleEventClick","clickInfo","event","className","children","Body","plugins","initialView","headerToolbar","left","center","right","eventClick","height","allDaySlot","slotMinTime","slotMaxTime","nowIndicator","businessHours","daysOfWeek","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/slotBooking/frontend/src/components/SlotCalendar.js"],"sourcesContent":["import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { Card } from 'react-bootstrap';\n\nconst SlotCalendar = ({ slots, onSlotSelect }) => {\n  // Convert slots data to FullCalendar event format\n  const events = slots.map(slot => ({\n    id: slot.slotId,\n    title: slot.status === 'Available' ? 'Available' : 'Booked',\n    start: `${slot.date}T${slot.startTime}`,\n    end: `${slot.date}T${slot.endTime}`,\n    extendedProps: { ...slot },\n    classNames: slot.status === 'Available' ? ['available'] : ['booked'],\n    color: slot.status === 'Available' ? '#28a745' : '#dc3545'\n  }));\n\n  // Handle calendar event click\n  const handleEventClick = (clickInfo) => {\n    const slot = clickInfo.event.extendedProps;\n    onSlotSelect(slot);\n  };\n\n  return (\n    <Card className=\"calendar-container shadow-sm\">\n      <Card.Body>\n        <FullCalendar\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          initialView=\"timeGridWeek\"\n          headerToolbar={{\n            left: 'prev,next today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n          }}\n          events={events}\n          eventClick={handleEventClick}\n          height=\"auto\"\n          allDaySlot={false}\n          slotMinTime=\"08:00:00\"\n          slotMaxTime=\"18:00:00\"\n          nowIndicator={true}\n          businessHours={{\n            daysOfWeek: [1, 2, 3, 4, 5], // Monday - Friday\n            startTime: '09:00',\n            endTime: '17:00',\n          }}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SlotCalendar;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EAChD;EACA,MAAMC,MAAM,GAAGF,KAAK,CAACG,GAAG,CAACC,IAAI,KAAK;IAChCC,EAAE,EAAED,IAAI,CAACE,MAAM;IACfC,KAAK,EAAEH,IAAI,CAACI,MAAM,KAAK,WAAW,GAAG,WAAW,GAAG,QAAQ;IAC3DC,KAAK,EAAE,GAAGL,IAAI,CAACM,IAAI,IAAIN,IAAI,CAACO,SAAS,EAAE;IACvCC,GAAG,EAAE,GAAGR,IAAI,CAACM,IAAI,IAAIN,IAAI,CAACS,OAAO,EAAE;IACnCC,aAAa,EAAE;MAAE,GAAGV;IAAK,CAAC;IAC1BW,UAAU,EAAEX,IAAI,CAACI,MAAM,KAAK,WAAW,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC;IACpEQ,KAAK,EAAEZ,IAAI,CAACI,MAAM,KAAK,WAAW,GAAG,SAAS,GAAG;EACnD,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMS,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMd,IAAI,GAAGc,SAAS,CAACC,KAAK,CAACL,aAAa;IAC1Cb,YAAY,CAACG,IAAI,CAAC;EACpB,CAAC;EAED,oBACEN,OAAA,CAACF,IAAI;IAACwB,SAAS,EAAC,8BAA8B;IAAAC,QAAA,eAC5CvB,OAAA,CAACF,IAAI,CAAC0B,IAAI;MAAAD,QAAA,eACRvB,OAAA,CAACN,YAAY;QACX+B,OAAO,EAAE,CAAC9B,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;QAC5D6B,WAAW,EAAC,cAAc;QAC1BC,aAAa,EAAE;UACbC,IAAI,EAAE,iBAAiB;UACvBC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE;QACT,CAAE;QACF1B,MAAM,EAAEA,MAAO;QACf2B,UAAU,EAAEZ,gBAAiB;QAC7Ba,MAAM,EAAC,MAAM;QACbC,UAAU,EAAE,KAAM;QAClBC,WAAW,EAAC,UAAU;QACtBC,WAAW,EAAC,UAAU;QACtBC,YAAY,EAAE,IAAK;QACnBC,aAAa,EAAE;UACbC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAAE;UAC7BzB,SAAS,EAAE,OAAO;UAClBE,OAAO,EAAE;QACX;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX,CAAC;AAACC,EAAA,GA7CI1C,YAAY;AA+ClB,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}